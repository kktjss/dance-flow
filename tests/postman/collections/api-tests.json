{
    "info": {
        "_postman_id": "e7d9f0c5-d0e6-4e5f-a8c4-f3d7e5c6b4a3",
        "name": "Dance Flow API Tests",
        "description": "Тесты API для приложения Dance Flow",
        "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "variable": [
        {
            "key": "baseUrl",
            "value": "http://localhost:5000",
            "type": "string"
        },
        {
            "key": "authToken",
            "value": "",
            "type": "string"
        },
        {
            "key": "projectId",
            "value": "",
            "type": "string"
        }
    ],
    "item": [
        {
            "name": "Health Check",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status code is 200\", function () {",
                            "    pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"Response contains status OK\", function () {",
                            "    var jsonData = pm.response.json();",
                            "    pm.expect(jsonData.status).to.eql(\"OK\");",
                            "});"
                        ],
                        "type": "text/javascript"
                    }
                }
            ],
            "request": {
                "method": "GET",
                "header": [],
                "url": {
                    "raw": "{{baseUrl}}/health",
                    "host": [
                        "{{baseUrl}}"
                    ],
                    "path": [
                        "health"
                    ]
                },
                "description": "Проверка доступности API"
            },
            "response": []
        },
        {
            "name": "Authentication",
            "item": [
                {
                    "name": "Register User",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 201\", function () {",
                                    "    pm.response.to.have.status(201);",
                                    "});",
                                    "",
                                    "pm.test(\"Response contains user data\", function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData).to.have.property('user');",
                                    "    pm.expect(jsonData.user).to.have.property('_id');",
                                    "    pm.expect(jsonData.user).to.have.property('username');",
                                    "    pm.expect(jsonData.user.username).to.eql(\"testuser_\" + pm.variables.get(\"timestamp\"));",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        },
                        {
                            "listen": "prerequest",
                            "script": {
                                "exec": [
                                    "pm.variables.set(\"timestamp\", new Date().getTime());"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"username\": \"testuser_{{timestamp}}\",\n    \"email\": \"testuser_{{timestamp}}@example.com\",\n    \"password\": \"password123\"\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/api/auth/register",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "auth",
                                "register"
                            ]
                        },
                        "description": "Регистрация нового пользователя"
                    },
                    "response": []
                },
                {
                    "name": "Login User",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Response contains token\", function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData).to.have.property('token');",
                                    "    pm.variables.set(\"authToken\", jsonData.token);",
                                    "});",
                                    "",
                                    "pm.test(\"Response contains user data\", function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData).to.have.property('user');",
                                    "    pm.expect(jsonData.user).to.have.property('_id');",
                                    "    pm.expect(jsonData.user).to.have.property('username');",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"username\": \"testuser_{{timestamp}}\",\n    \"password\": \"password123\"\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/api/auth/login",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "auth",
                                "login"
                            ]
                        },
                        "description": "Аутентификация пользователя"
                    },
                    "response": []
                }
            ],
            "description": "Тесты для API аутентификации"
        },
        {
            "name": "Projects",
            "item": [
                {
                    "name": "Create Project",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 201\", function () {",
                                    "    pm.response.to.have.status(201);",
                                    "});",
                                    "",
                                    "pm.test(\"Response contains project data\", function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData).to.have.property('_id');",
                                    "    pm.expect(jsonData).to.have.property('name');",
                                    "    pm.expect(jsonData.name).to.eql(\"Test Project\");",
                                    "    pm.variables.set(\"projectId\", jsonData._id);",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{authToken}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"name\": \"Test Project\",\n    \"description\": \"This is a test project created via API tests\",\n    \"isPrivate\": false,\n    \"tags\": [\"test\", \"api\"]\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/api/projects",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "projects"
                            ]
                        },
                        "description": "Создание нового проекта"
                    },
                    "response": []
                },
                {
                    "name": "Get All Projects",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Response is an array\", function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(Array.isArray(jsonData)).to.be.true;",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{authToken}}"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/api/projects",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "projects"
                            ]
                        },
                        "description": "Получение списка всех проектов"
                    },
                    "response": []
                },
                {
                    "name": "Get Project by ID",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Response contains correct project data\", function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData).to.have.property('_id');",
                                    "    pm.expect(jsonData._id).to.eql(pm.variables.get(\"projectId\"));",
                                    "    pm.expect(jsonData).to.have.property('name');",
                                    "    pm.expect(jsonData.name).to.eql(\"Test Project\");",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{authToken}}"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/api/projects/{{projectId}}",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "projects",
                                "{{projectId}}"
                            ]
                        },
                        "description": "Получение проекта по ID"
                    },
                    "response": []
                },
                {
                    "name": "Update Project",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Response contains updated project data\", function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData).to.have.property('_id');",
                                    "    pm.expect(jsonData._id).to.eql(pm.variables.get(\"projectId\"));",
                                    "    pm.expect(jsonData).to.have.property('name');",
                                    "    pm.expect(jsonData.name).to.eql(\"Updated Test Project\");",
                                    "    pm.expect(jsonData).to.have.property('description');",
                                    "    pm.expect(jsonData.description).to.eql(\"This project was updated via API tests\");",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "PUT",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{authToken}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"name\": \"Updated Test Project\",\n    \"description\": \"This project was updated via API tests\"\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/api/projects/{{projectId}}",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "projects",
                                "{{projectId}}"
                            ]
                        },
                        "description": "Обновление проекта"
                    },
                    "response": []
                },
                {
                    "name": "Delete Project",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Response confirms deletion\", function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData).to.have.property('message');",
                                    "    pm.expect(jsonData.message).to.include(\"deleted\");",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "DELETE",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{authToken}}"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/api/projects/{{projectId}}",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "projects",
                                "{{projectId}}"
                            ]
                        },
                        "description": "Удаление проекта"
                    },
                    "response": []
                }
            ],
            "description": "Тесты для API проектов"
        }
    ]
}