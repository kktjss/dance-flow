package main

import (
	"fmt"
	"os"
	"testing"
)

// TestMain –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –æ–¥–∏–Ω —Ä–∞–∑ –ø–µ—Ä–µ–¥ –≤—Å–µ–º–∏ —Ç–µ—Å—Ç–∞–º–∏ –≤ –ø–∞–∫–µ—Ç–µ
// –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –æ–±—â—É—é —Å—Ä–µ–¥—É —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –æ—á–∏—Å—Ç–∏—Ç—å —Ä–µ—Å—É—Ä—Å—ã –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
func TestMain(m *testing.M) {
	// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç–µ—Å—Ç–æ–≤–æ–π —Å—Ä–µ–¥—ã
	fmt.Println("üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç–µ—Å—Ç–æ–≤–æ–π —Å—Ä–µ–¥—ã...")
	
	// –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ–±—â—É—é –Ω–∞—Å—Ç—Ä–æ–π–∫—É –¥–ª—è –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤
	setupGlobalTestEnvironment()
	
	// –ó–∞–ø—É—Å–∫–∞–µ–º –≤—Å–µ —Ç–µ—Å—Ç—ã
	code := m.Run()
	
	// –û—á–∏—Å—Ç–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤ –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤
	fmt.Println("üßπ –û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–π —Å—Ä–µ–¥—ã...")
	cleanupGlobalTestEnvironment()
	
	os.Exit(code)
}

// setupGlobalTestEnvironment –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –≥–ª–æ–±–∞–ª—å–Ω—É—é —Å—Ä–µ–¥—É –¥–ª—è —Ç–µ—Å—Ç–æ–≤
func setupGlobalTestEnvironment() {
	// –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è —Ç–µ—Å—Ç–æ–≤
	if os.Getenv("TEST_ENV") == "" {
		os.Setenv("TEST_ENV", "true")
	}
	
	// –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –¥—Ä—É–≥–∏–µ –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
	fmt.Println("‚úÖ –ì–ª–æ–±–∞–ª—å–Ω–∞—è —Å—Ä–µ–¥–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞")
}

// cleanupGlobalTestEnvironment –æ—á–∏—â–∞–µ—Ç —Ä–µ—Å—É—Ä—Å—ã –ø–æ—Å–ª–µ —Ç–µ—Å—Ç–æ–≤
func cleanupGlobalTestEnvironment() {
	// –û—á–∏—Å—Ç–∫–∞ –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö —Ä–µ—Å—É—Ä—Å–æ–≤, –µ—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ
	fmt.Println("‚úÖ –ì–ª–æ–±–∞–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
} 